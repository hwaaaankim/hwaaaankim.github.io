{"version":3,"sources":["logo.svg","data.js","Cart.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Parent","props","Child1","이름","Child2","나이","useEffect","console","log","memo","connect","state","reducer","alert열렸니","reducer2","Table","responsive","map","a","i","name","quan","onClick","dispatch","type","payload","className","Detail","lazy","재고context","React","createContext","App","useState","Data","shoes","shoes변경","재고","재고변경","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Jumbotron","Button","variant","Provider","value","Card","axios","get","then","result","data","catch","fallback","useContext","history","useHistory","push","src","width","Test","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","store","createStore","combineReducers","액션","몇번째있니","findIndex","copy","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7b8c88e6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export default [\r\n  {\r\n    id: 0,\r\n    title: \"White and Black\",\r\n    content: \"Born in France\",\r\n    price: 120000,\r\n  },\r\n\r\n  {\r\n    id: 1,\r\n    title: \"Red Knit\",\r\n    content: \"Born in Seoul\",\r\n    price: 110000,\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    title: \"Grey Yordan\",\r\n    content: \"Born in the States\",\r\n    price: 130000,\r\n  },\r\n];\r\n","import React, { useEffect, memo } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nfunction Cart(props) {\r\n  return (\r\n    <div>\r\n      <Table responsive>\r\n        <tr>\r\n          <td>#</td>\r\n          <td>상품명</td>\r\n          <td>수량</td>\r\n          <td>변경</td>\r\n        </tr>\r\n        {props.state.map((a, i) => {\r\n          return (\r\n            <tr key={i}>\r\n              <td>{a.id}</td>\r\n              <td>{a.name}</td>\r\n              <td>{a.quan}</td>\r\n              <td>\r\n                <button\r\n                  onClick={() => {\r\n                    props.dispatch({\r\n                      type: \"수량증가\",\r\n                      payload: a.id,\r\n                    });\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  +{\" \"}\r\n                </button>\r\n                <button\r\n                  onClick={() => {\r\n                    props.dispatch({ type: \"수량감소\", payload: a.id });\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  -{\" \"}\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n        {/* <tr>\r\n          <td>1</td>\r\n          <td>{props.state[0].name}</td>\r\n          <td>Table cell</td>\r\n          <td>Table cell</td>\r\n        </tr> */}\r\n      </Table>\r\n      {props.alert열렸니 === true ? (\r\n        <div className=\"my-alert ml-sm-3 ml-md-0\">\r\n          <p>지금 구매하시면 신규 할인 30%</p>\r\n          <button\r\n            onClick={() => {\r\n              props.dispatch({ type: \"열렸나\" });\r\n            }}\r\n          >\r\n            닫기\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n      <Parent 이름=\"존박\" 나이=\"20\"></Parent>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Parent(props) {\r\n  return (\r\n    <div>\r\n      <Child1 이름={props.이름}></Child1>\r\n      <Child2 나이={props.나이}></Child2>\r\n    </div>\r\n  );\r\n}\r\n\r\n// function Child1() {\r\n//   useEffect(() => {\r\n//     console.log(\"랜더링1\");\r\n//   });\r\n//   return <div>111</div>;\r\n// }\r\n\r\n// function Child2() {\r\n//   useEffect(() => {\r\n//     console.log(\"랜더링2\");\r\n//   });\r\n//   return <div>222</div>;\r\n// }\r\n\r\nfunction Child1() {\r\n  useEffect(() => {\r\n    console.log(\"랜더링1\");\r\n  });\r\n  return <div>111</div>;\r\n}\r\n\r\nlet Child2 = memo(function () {\r\n  useEffect(() => {\r\n    console.log(\"랜더링2\");\r\n  });\r\n  return <div>222</div>;\r\n});\r\n\r\nfunction state를props화(state) {\r\n  return {\r\n    state: state.reducer, //state 는 store에 있는 모든 데이터\r\n    alert열렸니: state.reducer2,\r\n  };\r\n}\r\n\r\n// redux store 데이터를 가져와서 props로 변환 해주는 함수\r\n// redux의 사용은 복잡한 props 전송이 필요 없고, 데이터 관리가 용이 - state데이터의 수정 방법을 미리 정의\r\nexport default connect(state를props화)(Cart);\r\n// redux에 있는 데이터를 가져오기 위해서 작성 - redux에 있는 데이터를 임의의 state를props화 함수를 통해 connect한 Cart를 export한다는 것\r\n//export default Cart;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { useState, useContext, lazy, Suspense } from \"react\";\nimport Data from \"./data.js\";\n\nimport axios from \"axios\";\nimport {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Form,\n  Button,\n  FormControl,\n  Jumbotron,\n} from \"react-bootstrap\";\nimport { Link, Route, Switch, useHistory } from \"react-router-dom\";\n\nimport Cart from \"./Cart.js\";\n//import Detail from \"./Detail.js\";\nlet Detail = lazy(() => {\n  return import(\"./Detail.js\");\n});\n// 이렇게 작성 하는 경우 해당 파일이 필요할 때 import하게 되어 성능상 도움이 된다\nexport let 재고context = React.createContext();\n// 범위 생성하는 문법\n// context를 통해 props 없이 하위 컴포넌트에 데이터 전달 가능\n// React.createContext() 를 통해 범위 생성 => 같은 값을 공유할 HTML을 범위(<재고context.Provider value={}></재고context.Provider value={}>로 싸매기\n// 해당 컴포넌트로 감싼 영역에서는 데이터 공유 가능\n// useContext import해서 이용\n// 다른 파일 예) Detail.js 에서 사용하고 싶은 경우 export & import 사용\n\nfunction App() {\n  let [shoes, shoes변경] = useState(Data);\n  let [재고, 재고변경] = useState([10, 11, 12]);\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">VideoWeb</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link as={Link} to=\"/\">\n              Home\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"detail\">\n              Detail\n            </Nav.Link>\n\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">\n                Another action\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">\n                Separated link\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>Amazing</h1>\n            <p>최고의 영상</p>\n            <p>\n              <Button variant=\"primary\">ViewNow</Button>\n            </p>\n          </Jumbotron>\n          <div className=\"container\">\n            <재고context.Provider value={재고}>\n              <div className=\"row\">\n                {shoes.map((a, i) => {\n                  return <Card shoes={shoes[i]} i={i} key={i} />;\n                })}\n                {/* Component는 HTML로 랜더링 될 뿐, HTML이 아니기 때문에 onClick 등 속성 부여 하지 말것 \n                Component 가 아니라 해당 Component의 HTML부분에 부여해야한다*/}\n              </div>\n            </재고context.Provider>\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                axios\n                  .get(\"https://codingapple1.github.io/shop/data2.json\")\n                  .then((result) => {\n                    console.log(result.data);\n                    shoes변경([...shoes, ...result.data]);\n                  })\n                  .catch(() => {\n                    console.log(\"실패했어요\");\n                  });\n              }}\n            >\n              더보기\n            </button>\n          </div>\n        </Route>\n\n        <Route path=\"/detail/:id\">\n          <재고context.Provider value={재고}>\n            <Suspense fallback={<div>로딩중이에요</div>}>\n              <Detail shoes={shoes} 재고={재고} 재고변경={재고변경}></Detail>\n            </Suspense>\n          </재고context.Provider>\n        </Route>\n\n        <Route path=\"/cart\">\n          <Cart></Cart>\n        </Route>\n        <Route path=\"/:id\">\n          <div>아무거나 적혔을 때</div>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction Card(props) {\n  let 재고 = useContext(재고context);\n  let history = useHistory();\n  return (\n    <div\n      className=\"col-md-4\"\n      onClick={() => {\n        history.push(\"/detail/\" + props.shoes.id);\n      }}\n    >\n      {/* 위 방식은 단지 ~번째가 되는 수일 뿐 id 같은 고유한 값으로 해야한다*/}\n      <img\n        src={\n          \"https://codingapple1.github.io/shop/shoes\" + (props.i + 1) + \".jpg\"\n        }\n        width=\"100%\"\n      />\n      <h4>{props.shoes.title}</h4>\n      <p>\n        {props.shoes.content} & {props.shoes.price}\n      </p>\n      {/* {재고[0]} */}\n      <Test></Test>\n    </div>\n  );\n}\n\nfunction Test() {\n  let 재고 = useContext(재고context);\n\n  return <p>재고는 {재고[0]}개 입니다</p>;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers } from \"redux\";\n\nlet alert초기값 = true;\nfunction reducer2(state = alert초기값, 액션) {\n  if (액션.type === \"열렸나\") {\n    return false;\n  } else {\n    return state;\n  }\n}\nlet 초기값 = [\n  { id: 0, name: \"멋진신발\", quan: 2 },\n  { id: 1, name: \"멋진신발2\", quan: 1 },\n];\nfunction reducer(state = 초기값, 액션) {\n  // state=초기값 : state에 변경이 없으면 default parameter로 초기값를 대입하라는 문법\n  if (액션.type === \"항목추가\") {\n    let 몇번째있니 = state.findIndex((a) => {\n      return a.id === 액션.payload.id;\n    });\n\n    if (몇번째있니 >= 0) {\n      let copy = [...state];\n      copy[몇번째있니].quan++;\n      return copy;\n    } else {\n      let copy = [...state];\n      copy.push(액션.payload);\n      return copy;\n    }\n  } else if (액션.type === \"수량증가\") {\n    let copy = [...state];\n    copy[액션.payload].quan++;\n    return copy; // 수정된state return\n    // '수량증가' 외에 다른 데이터 변경이 필요 한 경우 else if통해서 계속 생성 가능\n  } else if (액션.type === \"수량감소\") {\n    let copy = [...state];\n    copy[액션.payload].quan--;\n    return copy;\n  } else {\n    return state;\n  }\n}\nlet store = createStore(combineReducers({ reducer, reducer2 }));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}